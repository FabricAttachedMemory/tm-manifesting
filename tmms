# Config file for TMMS (The Machine Manifesting Server), neeed by Manifesting
# scripts setup.py, manifest_api.py, and tm_manifest.py.  The values in
# this file as delivered will almost certainly NOT work for you.  Copy
# this file and edit the copy as appropriate.  Then move the custom copy to
# 1) /etc/tmms, where it will be used by default by all the commands.  This
#    is the system default location expected by the systems service startup.
# 2) /some/where/else/mytmms.  All commands must then be started with
#    "--config /some/where/else/mytmms".  This allows you to run multiple TMMS 
#    environments on a single system.

# Values below control the API, golden image aspects, PXE server, and
# firewall (iptables) rules.  Any change to this file should be followed
# by a run of "setup.py all" and a restart of the manifesting API server.

# Global topology config file for an instance of The Machine (giant JSON file)
TMCONFIG='/etc/tmconfig'

# IP address in this system on which the Manifest API listens
HOST = '0.0.0.0'    # 0.0.0.0 means all interfaces in the system
PORT = 31178        # listen on this port

# Top-level directory for TMMS infrastructure
MANIFESTING_ROOT = '/var/lib/tmms'

# The TFTP part of PXE booting has files that live under here.  TFTP is
# served by a dnsmasq instance configured by TMMS.
TFTP_ROOT = MANIFESTING_ROOT + '/tftp'

# L4TM repo information needed to build file system images for nodes.
# If you run your own local mirror, use that.  This address SHOULD be
# valid throughout the rest of 2016; if in doubt, contact the repo team.
#L4TM_MIRROR = 'http://hlinux-deejay.us.rdlabs.hpecorp.net/l4tm-pushed'
#L4TM_RELEASE = 'catapult'
#L4TM_MIRROR = 'http://seedy.us.rdlabs.hpecorp.net'
L4TM_MIRROR = 'http://ftp.us.debian.org/debian//'
L4TM_RELEASE = 'jessie'

# Remove 'main' for a much faster start (seconds vs tens of seconds), however
# you will be working with a partial package set.
L4TM_AREAS = ( 'main', 'contrib', 'non-free' )

# Additional mirrors to use for the image building process, besides the L4TM_MIRROR.
# It is a full string as it would appear in sources.list, e.g:
# ['deb http://hlinux-deejay.us.rdlabs.hpecorp.net/ l4fame main contrib non-free']
OTHER_MIRRORS = []

# NIC connected to the node network on which DHCP and TFTP will be served
# (usually something like ethX).  If the interface cannot be found (or is
# 'None') PXE services will NOT be started.  The manifesting API will
# still work, you just can't boot any images.  After changing this value
# you need to (re)-run "tm-manifest setup networking".  eth4 is the 
# default for a standard real ToRMS in a TM complex.
PXE_INTERFACE = 'eth4'

# Firewall rules must be set up against PXE_INTERFACE to keep DHCP packets
# in their place.  Values are "None" (user has powerful iptables fu),
# "DHCP" (provides DHCP firewall) and "DHCPNAT" (DHCP firewall plus NAT).
# DHCP is your best choice.
PXE_FIREWALL = 'DHCP'

# TMDOMAIN is deprecated; use TMCF "domains{publicData}" per the software ERS.
# In the corporate bringup environments, site IT has created one subdomain
# per instance.   Each subdomain also has hostnames "torms" and "nodeXX".
# Thus the IP addresses for local DHCP are available.  This is not true for
# FAME, hence FAME_SUBNET = <CIDR>. Example:
# PXE_SUBNET = '10.11.12.64/26'
# Assign sequential addresses starting at the indicated IP base address.
# Honor the subnet mask (in this case, 26 bits).  If the base address matches
# the legacy Sun broadcast address (host bits all zero), then node01 gets
# x.y.z.1, etc.   A FAME network created via libvirt will # probably be a
# /24 network like 10.11.12.0/24

PXE_SUBNET = 'None'     # 'None' falls back to external DNS
