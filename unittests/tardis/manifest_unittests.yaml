metadata:
    copyright: "Copyright 2016, Hewlett Packard Enterprise, LTD"
    name: tm-manifest_setup
    description: Install test of the tm-manifesting package and its setup routine
            process with unittests.
    maintainer:
        - name: Zach Volchak
          email: zakhar.volchak@hpe.com
    creator:
        - name: Zach Volchak
          email: zakhar.volchak@hpe.com

infrastructure:
    - host:
        name: bm-test
        deploy-from: tardis
        deploy-options: mem:8192,cpu:2,disk:15,isoName:qa-l4tm-tot-amd64.iso,dev:sda
        deploy-type: vm
        name: tm-vm

defaults:
    shell:
        failaction: fail, continue
        passaction: continue
        rcpass: rc==0

blocks:
    install_pkg:
         - shell: env
         - shell: echo "${REPO}" > /etc/apt/sources.list
         - shell: cat /etc/apt/sources.list
         - shell: apt -y update
         - shell: apt -y upgrade
         - shell: apt --assume-yes --force-yes install -t manifesting-catapult tm-manifesting
         - shell: apt-cache show tm-manifesting

    generate_tmconfig:
        - shell: echo "[global]" >> fame40.ini
        - shell: echo "node_count = 40" >> fame40.ini
        - shell: echo "book_size_bytes = 8M" >> fame40.ini
        - shell: echo "nvm_size_per_node = 512B" >> fame40.ini
        - shell: book_register.py -j fame40.ini > /etc/tmconfig

    setup_env:
        - shell: tm-manifest setup environment
        - shell: ln -l /var/lib/tmms/

    setup_networking:
        - shell: tm-manifest setup networking
        - shell: ln -l /var/lib/dnsmasq

    setup_golden:
        - shell: tm-manifest setup golden_image
        - shell: ls -l /var/lib/tmms/sys-images/golden/golden.arm.tar

    unittest_tmms:
        - shell: tm-manifest-server -D
        - shell: sleep 30
        - shell: tm-manifest-server --daemon-status
        - shell: cd /usr/lib/python3/dist-packages/tmms/unittests/
        - shell: ./test_all.sh
        - shell: tm-manifest-server --daemon-stop
        - shell: tm-manifest-server --daemon-status

test:
- step:
    tm-vm:
        - deploy: tm-vm
        - install_pkg
        - generate_tmconfig
        - setup_env
        - setup_networking
        - setup_golden
        - unittest_tmms
