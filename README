= Specifying the DNS Domain

  This used to be done with the TMDOMAIN variable in /etc/tmms.  Now use the
  "domains { publicData: ....}" field in TMCF.   Formats:

# Domain name for nodes in this instance.  Forty nodes are configured
# meaning TMMS must generate a list of 40 IP addresses.  Three formats
# exist for this variable:
# 1. Domain name only.  Example:
#    TMDOMAIN = 'have.it.your.way'
#    TMMS performs a DNS lookup on node01.<domain> through node40.<domain>
#    and configures DHCP appropriately.  The netmask is discerned from the
#    PXE_INTERFACE.  This is the "official" method but requires site IT
#    support to configure your DNS.  No DNS, no TMMS.
#
#    The remaining formats support static assignment (ie, DNS per format 1
#    is not available).  YOU are responsible for insuring these addresses
#    are legal in your environemnt.
#
# 2. Domain name,ipaddr.  Example:
#    TMDOMAIN = 'have.it.your.way,10.11.12.42'
#    TMMS will generate 40 IP addresses starting at the given address.
#    node01 is assigned the given IP address, node02 the next, etc.
#    A 24-bit network / 8-bit host netmask of 255.255.255.0 is assumed.
#
# 3. Domain name,CIDR network. Example:
#    TMDOMAIN = 'have.it.your.way,10.11.12.64/26'
#    Assign sequential addresses as per format 2, but use the explicit
#    subnet mask (in this case, 26 bits).  If the "base" address matches
#    the legacy Sun broadcast address (host bits all zero), then node01
#    will get x.y.z.1, node02 gets x.y.z.2, etc.  A FAME network will
#    probably be a /24 network like 10.11.12.0/24

# DECLARATION OF THIS VARIABLE IS DEPRECATED!
# Use the "domains{}" section of TMCF.

# TMDOMAIN = 'have.it.your.way'

= Prepping the ToRMS to serve ARM PXE

  DEPRECATED: should be done by "setup environment".  There's other useful
  information here so keep reading.

  sudo apt-get install grub-efi-arm64-bin

This is NOT grub-efi:amd64, which would replace grub-pc, will
probably break your system.  Nor is it grub-efi-arm64, which collides
with grub-pc but doesn't break your system.
It gives you the auxiliary modules under /usr/lib/grub/arm64-efi/*.mods
to build an EFI boot manager:

grub-mkimage --format=arm64-efi --output=grub4tm.pxe \
	--prefix='(pxe)/boot/grub' efinet ...

OR: pick up the ready-to-run PXE EFI GRUB at

http://hlinux-deejay.us.rdlabs.hpecorp.net/l4tm/dists/catapult/main/uefi/grub2-arm64/current/grubnetaa64.efi.signed

or unpack the package

apt-get download grub-efi-arm64-signed:arm64

Drop the ".signed" part.  It has all the modules as built by the command

debian/build-efi-images

As found after "apt-get download grub2:arm64"
